load_sample :drum_heavy_kick

lp = :loop_compus
sd = sample_duration lp
#sample :ambi_lunar_land, rate: 0.6
define :drums do
  sync :tick
  sample lp, rate: 1, amp: 0.5, amp: 2

  sleep sd / 2
end

define :bd do
  wait :tick
  with_fx :compressor do
    2.times do
      sample :drum_bass_hard, amp: 2
      sample :bass_hit_c, amp: 5
      sleep sd / 2
    end
  end

  with_fx :echo, delay: sd * 1 do
    4.times do
      sleep sd / 8

      #      sample :drum_cymbal_hard, amp: rrand(0.8, 1.5), amp: 0.8
      #  sample :elec_blip2, rate: [1, 2, 4, 8, 16, 0.5, 0.25].choose, amp: 2
      #      sample :elec_blup, rate: 2
      # sample :elec_flip, rate: [20, 40, 10].choose
    end

  end


end

define :synths do
  wait :tick
  use_synth :fm
  n = 1
  p = [52, 48, 50].choose
  in_thread do
    4.times do
      use_synth :supersaw
      # play p, release: sd/8, attack: 0, amp: 1, release: 0.505, cutoff: rrand(100, 120)
      use_synth :mod_saw
      # play p + 0, release: sd/8, attack: 0, amp: 0.7, release: 1, mod_rate: sd * 4, mod_range: 12, cutoff: rrand(100, 120), detune: 12
      sleep sd/ 1
    end
  end
  use_transpose 0
  with_fx :reverb, room: 0.1 do
    with_fx :ixi_techno, rate: sd/16 do
      2.times do
        use_synth :prophet
        #play chord(:c4, :minor).choose, release: 0.1, attack: 0, cutoff: rrand(90, 120)
        #   play_pattern_timed [55, p, 55, p, 57,p, 59,p]*2, [sd/8], attack: 0, release: 0.131, amp: 2, cutoff: rrand(80, 100)
      end
    end
  end
end

in_thread(name: :drums){loop{drums}}
in_thread(name: :synths){loop{synths}}
in_thread(name: :bd){loop{bd}}