
defonce :val do
  OSCVal.new(8112)
end

defonce :out do
  #OSC::Client.new("192.168.15.14", 8112)
  OSC::Client.new("10.0.0.8", 8112)
end

define :osc do |msg, val|
  out.send(OSC::Message.new(msg, val))
end

define :amp do
  val.read("/palimpsest/amp")
end

define :left do
  val.read("/palimpsest/left")
end

define :right do
  val.read("/palimpsest/right")

end

define :colour do |idx=0|
  val.read("/palimpsest/colour", idx)
end

o = false

with_fx :wobble do |w|
  defonce :wob, override: o do
    w
  end
  use_synth :dsaw
  defonce :s, override: o do
    play 40, sustain: 1000000, amp_slide: 0.2
  end
  defonce :s1, override: o do
    play 40, sustain: 1000000, amp_slide: 0.2
  end
  defonce :s2, override: o do
    play 40, sustain: 1000000, amp_slide: 0.2
  end
  beat = 0

  define :live do
    cue :tick
    start = beat % 4
    size = start == 0 ? 0.8 : 0.5
    sleep 0.1
    tonic = chord(:e3, :minor).choose
    range = 36
    co = 70
    a = 0
    control s, note: 50, cutoff: 90, amp: a
    control s1, note: tonic + colour(1) * range, cutoff: co, amp: a

    control s2, note: tonic + colour(2) * range, cutoff: co, amp: a

    control wob, amp_slide: 0.3, amp: 0.2, phase: 0.125, cutoff_max: 120, cutoff_min: 70, wave: 0
    beat += 1
  end

  in_thread(name: :live_loop) do
    loop do
      live
    end
  end
end

define :drumit do
  sync :tick
  with_fx :reverb, phase: 0.2, mix: 0.9 do
    sample :ambi_choir, amp: 1, rate: 0.2,pan: colour(2) * 2 - 1

  end
  sample :bass_hit_c, amp: 2, rate: 1

  sleep 0.8



end

in_thread(name: :drums) do
  loop do
    drumit
  end
end


in_thread(name: :drums2) do
  loop do
    drumit2
  end
end

in_thread(name: :meelody) do
  loop do
    melody
  end
end

define :drumit2 do
  sync :tick
  with_fx :compressor do
    with_fx :echo, phase: 0.2, decay: 0.8, mix: 0.2 do
      sample :drum_heavy_kick, amp: 4
      sample :drum_bass_hard, amp: 2
    end
  end
  sleep 0.8

end

define :melody do
  sync :tick
  use_synth :prophet
  n = chord([:a2, :a3, :a4].choose, :minor).choose
  Thread.new do
    Kernel.sleep 0.5
    osc "/beat", 1.0 / (n.to_f / 60) - 0.6
  end
  with_fx :echo, phase: 0.2, mix: 0.2 do
    play n, attack: 0, amp: 1, release: 1, cutoff: rrand(50, 100)
  end
  sleep 0.4
end



comment do
  loop do
    v = val.read("/palimpsest/left")
    puts v
    sleep 0.125

  end
end