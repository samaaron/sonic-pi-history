
defonce :val do
  OSCVal.new(8112)
end

defonce :out do
  #OSC::Client.new("192.168.15.14", 8112)
  OSC::Client.new("10.0.0.8", 8112)
end

o = false

with_fx :wobble do |w|
  defonce :wob, override: o do
    w
  end
  use_synth :dsaw
  defonce :s, override: o do
    play 40, sustain: 1000000
  end
  defonce :s1, override: o do
    play 40, sustain: 1000000
  end
  defonce :s2, override: o do
    play 40, sustain: 1000000
  end
  beat = 0

  define :live do
    sync :tick
    start = beat % 4
    size = start == 0 ? 0.8 : 0.5

    Thread.new do
      Kernel.sleep 0.5
      out.send(OSC::Message.new("/beat", 0.1))
    end

    v = val.read("/palimpsest/amp")
    l = val.read("/palimpsest/left")
    r = val.read("/palimpsest/right")
    c = val.read_all("/palimpsest/colour")
    l = 0.9
    r = 0.8
    l = 0.001
    puts c
    sleep 0.1
    tonic = chord(:e1, :minor).choose
    range = 24
    co = 50
    control s, note: tonic + c.first * range, cutoff: co
    control s1, note: tonic + c[1] * range, cutoff: co

    control s2, note: tonic + c[2] * range, cutoff: co

    control wob, amp_slide: 0.3, amp: 0.3, phase: 1, cutoff_max: 120, cutoff_min: 40, wave: 1
    beat += 1
  end

  in_thread(name: :live_loop) do
    loop do
      live
    end
  end
end

define :drumit do
  wait :tick
#  sample :elec_blip
  sample :bass_hit_c, amp: 3
  
  sleep 0.25
  with_fx :echo, phase: 0.25, mix: 0.2 do
  sample :elec_filt_snare, rate: 43
  use_synth :tb303
  play 30, release: 0.2, cutoff: 70
  end
  sleep 0.25
end

in_thread(name: :drums) do
  loop do
    drumit
  end
end




comment do
  loop do
    v = val.read("/palimpsest/left")
    puts v
    sleep 0.125

  end
end